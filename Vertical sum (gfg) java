Question:-
Given a Binary Tree, find vertical sum of the nodes that are in same vertical line. Print all sums through different vertical lines starting from left-most vertical line to right-most vertical line.

Solution:-

/*Complete the function below
Node is as follows:
class Node{
int data;
Node left, right;
Node(int item)
{
    data = item;
    left = right = null
}
}
*/
class Solution{
    public ArrayList <Integer> verticalSum(Node root) {
        // add your code here
        ArrayList<Integer> ans = new ArrayList<>();
        if(root == null)
            return ans;
        TreeMap<Integer, Integer> m = new TreeMap<>();// store horizontal dist and sum
        verticalSumHelper(root, 0, m);
        
        for(Map.Entry<Integer, Integer> r: m.entrySet()){
        if(m != null){
            ans.add(r.getValue());
        }
        }
        return ans;
    }
    public void verticalSumHelper(Node root, int hDist, TreeMap<Integer, Integer> m){
        if(root == null){
            return;
        }
        verticalSumHelper(root.left, hDist - 1, m);
        int prevSum = m.get(hDist) == null ? 0 : m.get(hDist);
        m.put(hDist, prevSum + root.data);
        verticalSumHelper(root.right, hDist + 1, m);
        
    }
}
