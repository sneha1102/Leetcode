class Solution {
    public int rob(int[] nums) {
        if(nums.length == 1){
            return nums[0];
        }
        int first[] = new int[nums.length];
        int last[] = new int[nums.length];
        int j = 0, k = 0;
        for(int i = 0; i < nums.length; i++){
            if( i != 0){
                first[j++] = nums[i];
            }
            if(i != nums.length - 1){
                last[k++] = nums[i];
            }
        }
        return Math.max(solve(first), solve(last));
    }
    private int solve(int  nums[]){
        if(nums.length == 0){
            return 0;
        }
        if(nums.length == 1){
            return nums[0];
        }
        int prev = nums[0];
        int prev2 = 0;
    
        for(int i = 1; i < nums.length; i++){
            int curr =  Math.max((nums[i] + prev2), prev);
            prev2 = prev;
            prev = curr;
        }
        return prev;
    }
}
