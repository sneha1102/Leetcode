Given two strings s and t, return true if t is an
anagram
of s, and false otherwise.

 

Example 1:

Input: s = "anagram", t = "nagaram"

Output: true

Example 2:

Input: s = "rat", t = "car"

Output: false

 

Constraints:

    1 <= s.length, t.length <= 5 * 104
    s and t consist of lowercase English letters.

Solution:-

class Solution {
    public boolean isAnagram(String s, String t) {
        // Approach - 1
        // if(s.length() != t.length()){
        //     return false;
        // }
        // char s1[] = s.toCharArray();
        // char s2[] = t.toCharArray();
        // Arrays.sort(s1);
        // Arrays.sort(s2);
        // for(int i = 0; i < s1.length; i++){
        //     if(s1[i] != s2[i]){
        //         return false;
        //     }
        // }
        // return true;

        // Approach - 2
        if(s.length() != t.length()){
            return false;
        }
        Map<Character, Integer> m = new HashMap<>();
        for(int i = 0; i < s.length(); i++){
            m.put(s.charAt(i), m.getOrDefault(s.charAt(i), 0) + 1);
        }
        for(int i = 0; i < t.length(); i++){
            if(m.containsKey(t.charAt(i))){
                m.put(t.charAt(i), m.get(t.charAt(i)) - 1);
            }
        }
        int c = 0;
        for(Map.Entry<Character, Integer> e : m.entrySet()){
            c = e.getValue();
            if(c != 0){
                return false;
            }
        }
        return true;
    }
}
