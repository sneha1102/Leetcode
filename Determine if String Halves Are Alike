Question:-
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.

Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.

Return true if a and b are alike. Otherwise, return false.

 

Example 1:

Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

Example 2:

Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.

 

Constraints:

    2 <= s.length <= 1000
    s.length is even.
    s consists of uppercase and lowercase letters.


Solution:-

class Solution {
    public boolean halvesAreAlike(String s) {
        int len = s.length();
        String s1 = s.substring(0, len / 2);
        String s2 = s.substring((len / 2));
        int p = 0, q = 0;
        for(int i = 0; i < s1.length(); i++){
            char c = Character.toLowerCase(s1.charAt(i));
            if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')
                p++;
            char d = Character.toLowerCase(s2.charAt(i));
            if(d == 'a' || d == 'e' || d == 'i' || d == 'o' || d == 'u')
                q++;
        }
        return (p == q);
    }
}
