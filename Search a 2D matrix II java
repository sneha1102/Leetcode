Question:-

Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

    Integers in each row are sorted in ascending from left to right.
    Integers in each column are sorted in ascending from top to bottom.
    
    Solution:-

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        // We will start either from top right or bottom left
        // here we will use top right
        // target > pivot then r++;
        // target < pivot then c--
        int r = 0, c = matrix[0].length - 1;
        while(r < matrix.length && c >= 0){
            if(target == matrix[r][c])
                return true;
            else if(target > matrix[r][c])
                r++;
            else
                c--;
        }
        return false;
    }
}

TC - O(ROW + COL)

