Question:-
You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:

    numberOfBoxesi is the number of boxes of type i.
    numberOfUnitsPerBoxi is the number of units in each box of the type i.

You are also given an integer truckSize, which is the maximum number of boxes that can be put on the truck. You can choose any boxes to put on the truck as long as the number of boxes does not exceed truckSize.

Return the maximum total number of units that can be put on the truck.

Solution:-

Let, boxTypes = [[5,10],[2,5],[4,7],[3,9]] & truckSize = 10.

Sort it in descending order according to the unit. So, it will be [[5,10], [3, 9], [4,7], [2, 5]]
Now, take the boxes serially until the truck is full.
5 boxes from the first boxType, so units = 5 * 10 = 50
3 boxes from the 2nd boxType, so units = 3 * 9 = 27
2 boxes from the 3rd boxType, so units = 2 * 7 = 14

So maximum total number of units = 50 + 27 + 14 = 91

Code :-
class Solution {
    public int maximumUnits(int[][] boxTypes, int truckSize) {
        Arrays.sort(boxTypes, Comparator.comparingInt(o -> -o[1]));
        int res = 0, n = boxTypes.length, i = 0;
        
        while( i < n && truckSize > 0){
            int max = Math.min(boxTypes[i][0], truckSize);
            res += max * boxTypes[i][1];
            truckSize -= max;
            i++;
        }
        return res;
    }
}
