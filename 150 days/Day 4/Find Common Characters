Given a string array words, return an array of all characters that show up in all strings within the words (including duplicates). You may return the answer in any order.

 

Example 1:

Input: words = ["bella","label","roller"]
Output: ["e","l","l"]

Example 2:

Input: words = ["cool","lock","cook"]
Output: ["c","o"]

Solution:-

class Solution {
    public List<String> commonChars(String[] words) {
        List<String> ans = new ArrayList<>();
        int minFreq[] = new int[26];
        Arrays.fill(minFreq, Integer.MAX_VALUE);

        for(String word: words){
            char charArr[] = new char[26];
            for(char c : word.toCharArray()){
                charArr[c - 'a']++;
            }

            for(int i = 0; i < 26; i++){
                minFreq[i] = Math.min(minFreq[i], charArr[i]);
            }
        }
        for(int i = 0; i < 26; i++){
            while(minFreq[i] > 0){
                ans.add("" + (char)(i + 'a'));
                minFreq[i]--;
            }
        }
        return ans;
    }
}
