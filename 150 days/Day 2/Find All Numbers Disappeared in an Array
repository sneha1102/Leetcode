Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.

 

Example 1:

Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

Example 2:

Input: nums = [1,1]
Output: [2]

Solution:-

class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> ans = new ArrayList<>();
        // mark num as -ve to that index if num is present in array
        for(int i = 0; i < nums.length; i++){
            // get index, 0 base index so - 1
            int idx = Math.abs(nums[i]) - 1;
            if(nums[idx] < 0){
                continue;
            }
            nums[idx] *= -1;
        }

        // +ve num will be the ans
        for(int i = 0; i < nums.length; i++){
            if(nums[i] > 0){
                ans.add(i + 1);
            }
        }
        return ans;
    }
}
