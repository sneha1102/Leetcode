You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

 

Example 1:

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:

Input: list1 = [], list2 = []
Output: []

Example 3:

Input: list1 = [], list2 = [0]
Output: [0]

Solution:-

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode list = new ListNode(-1);
        ListNode p1 = list1, p2 = list2;
        while(p1 != null && p2 != null){
            if(p1.val >= p2.val){
                list.next = p2;
                p2 = p2.next;
            }else{
                list.next = p1;
                p1 = p1.next;
            }
        }
        while(p1 != null){
            list.next = p1;
            p1 = p1.next;
        }
        while(p2 != null){
            list.next = p2;
            p2 = p2.next;
        }
        return list.next;
    }
}
