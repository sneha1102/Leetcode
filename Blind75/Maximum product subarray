Question:-
Given an integer array nums, find a
subarray
that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

Solution:-

class Solution {
    public int maxProduct(int[] nums) {
        int max_overall = nums[0];
        int max_here = nums[0], min_here = nums[0];
        for(int i = 1; i < nums.length; i++){
            int temp = max_here;
            max_here = Math.max(Math.max(nums[i], max_here * nums[i]), min_here * nums[i]);
            min_here = Math.min(Math.min(nums[i], temp * nums[i]), min_here * nums[i]);
            max_overall = Math.max(max_overall, max_here);
        }
        return max_overall;
    }
}
