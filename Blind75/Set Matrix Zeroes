Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:

Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]

Example 2:

Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]

Solution:-

class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        boolean[][] vis = new boolean[m][n];
        for(int i = 0; i < m; i++){
            for(int j= 0; j < n; j++){
                // check whether it is previous zero or modified zero
                if(matrix[i][j] == 0 && vis[i][j] == false){
                    fill(i, j, matrix, vis);
                }
            }
        }
    }

     public void fill(int x,int y,int[][] mat,boolean[][] vis){
        int m = mat.length;
        int n = mat[0].length;
        for(int i = 0; i < m; i++){
            if(mat[i][y] != 0){
                mat[i][y] = 0;
                vis[i][y] = true;
            }
        }

        for(int j = 0; j < n; j++){
            if(mat[x][j] != 0){
                mat[x][j] = 0;
                vis[x][j] = true;
            }
        }
     
     
     }
}
