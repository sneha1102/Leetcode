Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.

 

Example 1:

Input: arr = [5,5,4], k = 1
Output: 1
Explanation: Remove the single 4, only 5 is left.

Example 2:

Input: arr = [4,3,1,1,3,3,2], k = 3
Output: 2
Explanation: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.

 

Constraints:

    1 <= arr.length <= 10^5
    1 <= arr[i] <= 10^9
    0 <= k <= arr.length

Solution:-

class Solution {
    // TC - O(n + m log m + k log m) where m = no of unique integers, n = total elements in array
    // SC - O(m)
    public int findLeastNumOfUniqueInts(int[] arr, int k) {
        Map<Integer, Integer> m = new HashMap<>();
        for(int i = 0; i < arr.length; i++){
            m.put(arr[i], m.getOrDefault(arr[i], 0) + 1);
        }

        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> m.get(a) - m.get(b));
        for(int i: m.keySet()){
            pq.add(i);
        }
        for(int i = 1; i <= k; i++){
            int ele = pq.poll();
            int freq = m.get(ele);
            if(freq > 1){
                m.put(ele, m.get(ele) - 1);
                pq.add(ele);
            }
        }
        return pq.size();
    }
}
