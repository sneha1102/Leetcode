Write a function that takes in a special array and returns its sum.      
special array: A non-empty array that contains integers or special array.                              
the product sum of special array is sum of the element multiplied by their level of depth       
EG:       [x , y] = x+ y       [x, [y, z]] = x + 2*(y+z)       [x, [y, [z]]] = x + 2* (y + 3z)

Solution:- 

import java.util.List;

public class ProductSumSpecialArray {
    public static int productSum(List<Object> array) {
        return productSumHelper(array, 1);
    }

    public static int productSumHelper(List<Object> array, int depth) {
        int sum = 0;

        for (Object element : array) {
            if (element instanceof List) {
                @SuppressWarnings("unchecked")
                List<Object> innerArray = (List<Object>) element;
                sum += productSumHelper(innerArray, depth + 1);
            } else {
                sum += (int) element;
            }
        }

        return sum * depth;
    }

    public static void main(String[] args) {
        List<Object> specialArray = List.of(5, 2, List.of(7, -1), 3, List.of(6, List.of(-13, 8), 4));

        int result = productSum(specialArray);

        System.out.println("Product sum: " + result);
    }
}
